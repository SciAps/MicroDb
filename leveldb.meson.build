project('leveldb', 'cpp')

leveldb_pub_headers = [
'include/leveldb/c.h',
'include/leveldb/cache.h',
'include/leveldb/comparator.h',
'include/leveldb/db.h',
'include/leveldb/dumpfile.h',
'include/leveldb/env.h',
'include/leveldb/filter_policy.h',
'include/leveldb/iterator.h',
'include/leveldb/options.h',
'include/leveldb/slice.h',
'include/leveldb/status.h',
'include/leveldb/table.h',
'include/leveldb/table_builder.h',
'include/leveldb/write_batch.h'
]

leveldb_src = [
'db/builder.cc',
'db/builder.h',
'db/c.cc',
'db/db_impl.cc',
'db/db_impl.h',
'db/db_iter.cc',
'db/db_iter.h',
'db/dbformat.cc',
'db/dbformat.h',
'db/dumpfile.cc',
'db/filename.cc',
'db/filename.h',
'db/log_format.h',
'db/log_reader.cc',
'db/log_reader.h',
'db/log_writer.cc',
'db/log_writer.h',
'db/memtable.cc',
'db/memtable.h',
'db/repair.cc',
'db/skiplist.h',
'db/snapshot.h',
'db/table_cache.cc',
'db/table_cache.h',
'db/version_edit.cc',
'db/version_edit.h',
'db/version_set.cc',
'db/version_set.h',
'db/write_batch.cc',
'db/write_batch_internal.h',
'util/arena.cc',
'util/arena.h',
'util/bloom.cc',
'util/cache.cc',
'util/coding.cc',
'util/coding.h',
'util/comparator.cc',
'util/crc32c.cc',
'util/crc32c.h',
'util/env.cc',
'util/env_posix.cc',
'util/filter_policy.cc',
'util/hash.cc',
'util/hash.h',
'util/histogram.cc',
'util/histogram.h',
'util/logging.cc',
'util/logging.h',
'util/mutexlock.h',
'util/options.cc',
'util/posix_logger.h',
'util/random.h',
'util/status.cc',
'table/block.cc',
'table/block.h',
'table/block_builder.cc',
'table/block_builder.h',
'table/filter_block.cc',
'table/filter_block.h',
'table/format.cc',
'table/format.h',
'table/iterator.cc',
'table/iterator_wrapper.h',
'table/merger.cc',
'table/merger.h',
'table/table.cc',
'table/table_builder.cc',
'table/two_level_iterator.cc',
'table/two_level_iterator.h',
'port/port_posix.cc'
]

#corefoundataion_dep = dependency('appleframeworks', modules: ['CoreFoundation'] )

lib_headers = install_headers(leveldb_pub_headers, subdir : 'leveldb')
pub_headers = include_directories('include')
internal_headers = include_directories('port')
leveldb_include = [ pub_headers, internal_headers ]

if host.name() == 'darwin'
  cpp_args = ['-DOS_MACOSX', '-DLEVELDB_PLATFORM_POSIX']
  dep = dependency('appleframeworks', modules : 'foundation')
else
  dep = []
  cpp_args = ['-DOS_LINUX', '-DLEVELDB_PLATFORM_POSIX']
endif

leveldb_staticlib = static_library('libleveldb',
            leveldb_src,
            include_directories : leveldb_include,
            cpp_args : cpp_args,
            dependencies : dep
            )

dep = declare_dependency(
        link_with: leveldb_staticlib,
        include_directories : pub_headers
        )
